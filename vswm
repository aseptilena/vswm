#!/usr/bin/env python2

#    This file is part of VSWM.
#    Copyright (C) 2012  Diogo Oliveira de Melo
#
#    VSWM program is free software: you can redistribute it and/or modify
#    it under the terms of the GNU Affero General Public License as published by
#    the Free Software Foundation, either version 3 of the License, or
#    (at your option) any later version.
#
#    This program is distributed in the hope that it will be useful,
#    but WITHOUT ANY WARRANTY; without even the implied warranty of
#    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#    GNU Affero General Public License for more details.
#
#    You should have received a copy of the GNU Affero General Public License
#    along with this program.  If not, see <http://www.gnu.org/licenses/>.


import ConfigParser, os, re

def init_wireless(dev):
    os.system('ip link set ' + dev + ' down')
    os.system("rfkill unblock wifi")
    os.system('killall -9 dhclient')
    os.system('killall -9 wpa_supplicant')
    os.system('ip link set ' + dev + ' up')
    os.system('sleep 1')

def connect_wep(dev, ssid):
    os.system("ifconfig " + dev + " down")
    os.system("iwconfig " + dev + " essid '" + ssid + "'")
    os.system("iwconfig " + dev + " ap any")
    os.system('ip link set ' + dev + ' up')

def connect_wpa(dev, ssid, psk):
    os.system("wpa_passphrase '" + ssid  + "' '" + psk + "' > /etc/wpa_supplicant/wpa_supplicant.conf")
    os.system("wpa_supplicant -d -Dwext  -i " + dev + " -c /etc/wpa_supplicant/wpa_supplicant.conf >& /var/tmp/wpa_supplicant.log &")
    os.system("sleep 5")

def set_dns(dns1, dns2):
    fd = open('/etc/resolv.conf', 'w')
    fd.write('nameserver ' + dns1 + '\n')
    fd.write('nameserver ' + dns2 + '\n')
    fd.close()


config = ConfigParser.ConfigParser()
config.readfp(open('/etc/vswm.cfg'))

dev = config.get('global', 'dev');
init_wireless(dev)

p = os.popen('iwlist ' + dev + ' scan');
ssid_list = []
while 1:
    line = p.readline()
    if not line:
        break;
    if line.find("ESSID") != -1:
        line = re.sub("^.*ESSID:", "", line)
        line = re.sub('"', '', line)
        line = line.replace('\n', '')
        ssid_list.append(line)
        print(line)


for entry in config.sections():
    if entry != 'global':
        ssid = config.get(entry, 'ssid')
        try:
            i = ssid_list.index(ssid)
        except ValueError:
            continue

        protocol = config.get(entry, 'protocol')

        if 'WEP' == protocol:
            connect_wep(dev, ssid)
        elif 'WPA' == protocol:
            psk = config.get(entry, 'psk')
            print("ssid: " + ssid)
            print("psk: " + psk)
            connect_wpa(dev, ssid, psk)
        else:
            print("ERROR: protocol not recognized")

        net = config.get(entry, 'net')
        if 'dhcp' == net:
            os.system("dhclient " + dev)
        elif 'static' == net:
            address = config.get(entry, 'address')
            gateway = config.get(entry, 'gateway')
            print("address: " + address)
            print("gateway: " + gateway)
            os.system("ifconfig " + dev + " " + address)
            os.system("route add default gw " + gateway + " " + dev)
        try:
            os.system("sh " + config.get(entry, 'post-script'))
        except ConfigParser.NoOptionError:
            break
